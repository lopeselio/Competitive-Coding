You're given strings J representing the types of stones that are jewels, and S representing the stones you have.  Each character in S is a type of stone you have.  You want to know how many of the stones you have are also jewels.

The letters in J are guaranteed distinct, and all characters in J and S are letters. Letters are case sensitive, so "a" is considered a different type of stone from "A".

Example 1:

Input: J = "aA", S = "aAAbbbb"
Output: 3
Example 2:

Input: J = "z", S = "ZZ"
Output: 0
Note:

S and J will consist of letters and have length at most 50.
The characters in J are distinct.

============================================SOLUTION============================
//C++
class Solution {
public:
    int numJewelsInStones(string J, string S) {
        unordered_set<char> jewels;
        for(char c : J){
            jewels.insert(c);
        }
        int countJ = 0;
        for(char c : S){
            if(jewels.find(c) != jewels.end()){
                countJ++;
            }
        }
        return countJ;
        
    }
};
============================================END=================================
//JAVA

class Solution {
    public int numJewelsInStones(String J, String S) {
        Set<Character> jewels = new HashSet<>();
        for(char c : J.toCharArray()){
            jewels.add(c);
        }
        int countJ = 0;
        for(char c : S.toCharArray()){
            if(jewels.contains(c)){
                countJ++;
            }
        }
        return countJ;
    }
}
================================================================================
//PYTHON
class Solution:
    def numJewelsInStones(self, J: str, S: str) -> int:
        count = 0
        for c in S:
            if c in J:
                count += 1
        return count
        
