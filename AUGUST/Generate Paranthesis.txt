22. Generate Parentheses

Given n pairs of parentheses, write a function to generate all combinations of well-formed parentheses.

For example, given n = 3, a solution set is:

[
  "((()))",
  "(()())",
  "(())()",
  "()(())",
  "()()()"
]
---------------------------------------------------SOLUION------------------------------------------------------------
//USING BACKTRACKING IN JAVA
///JAVA
class Solution {
    public List<String> generateParenthesis(int n) {
        List<String> output_array = new ArrayList();
        backtrack(output_array, "",0, 0, n);
        return output_array;        
    }
    public void backtrack(List<String> output_arr, String current_string, int open, int close, int max ){
        if (current_string.length() == max * 2){
            output_arr.add(current_string);
            return;
        }
        if (open < max) backtrack(output_arr, current_string + "(", open+1, close, max);
        if (close < open) backtrack(output_arr, current_string + ")", open, close +1, max);
    }
}
--------------------------------------------------END------------------------------------------------------------------

